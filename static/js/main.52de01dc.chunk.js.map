{"version":3,"sources":["Todo/Contexts/PopupContext.js","Todo/Components/Popup/Popup.js","Todo/Components/Header/Header.js","Todo/Components/InputArea/InputArea.js","Todo/Components/TaskArea/TaskArea.js","Todo/Todo.js","App.js","reportWebVitals.js","index.js"],"names":["PopupContext","React","createContext","PopupResource","children","defaultState","groupRef","useRef","useState","state","setState","useEffect","Provider","value","popupAppear","event","stopPropagation","current","classList","add","remove","prev","popupDisappear","Button","buttonTitle","onClick","width","args","useContext","Fragment","className","ref","style","ButtonPopup","forwardRef","props","createElement","Child","Header","changeFilter","markDoneAll","deleteAll","filterMode","defaultValue","sortType","name","onChange","target","disabled","checked","filterType","type","EditFormBase","defaultVal","outerRef","onSubmit","formData","setFormData","title","textContent","handleChange","newState","newFormData","preventDefault","e","toUpperCase","rows","cols","description","date","InputArea","addTask","inputRef","setTitle","data","handleSubmit","task","focus","placeholder","TaskItem","editTask","taskList","deleteTask","markDone","titleRef","id","isDone","display","marginLeft","fontSize","isStar","changeStarState","TaskArea","map","Todo","JSON","parse","localStorage","getItem","setTaskListState","setTaskList","arg","newTaskList","Function","setItem","stringify","setFilterModeState","handleMarkdone","targetId","newFilterMode","Number","parseInt","length","filter","displayList","sort","a","b","reduce","acc","unshift","push","handleFilter","App","reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.52de01dc.chunk.js","sourcesContent":["import React, { useContext } from 'react'\n\nexport let PopupContext = React.createContext()\n\n\n","\nimport React, { useRef, useContext, useState, useEffect, forwardRef } from 'react'\nimport { PopupContext } from '../../Contexts/PopupContext.js'\nimport './Popup.css'\n\n\nfunction PopupResource({ children, defaultState }) {\n  const currentState = useRef('')\n  const groupRef = useRef(null)\n  const [ state, setState ] = useState(() => {\n    return defaultState\n  })\n  useEffect(() => {\n  }, [])\n\n  const popupAppear = (event) => {\n    event.stopPropagation()\n    groupRef.current.classList.add('appear')\n    groupRef.current.classList.remove('disappear')\n    setState(prev => 'appear')\n  }\n\n  const popupDisappear = (event) => {\n    event.stopPropagation()\n    groupRef.current.classList.remove('appear')\n    groupRef.current.classList.add('disappear')\n    setState(prev => 'disappear')\n  }\n\n  return (\n    <PopupContext.Provider value={{ popupAppear, popupDisappear, groupRef, state, }} >\n      { children }\n    </PopupContext.Provider>\n  )\n}\n\nexport let PopupWrapper = ( Child ) => ({ children, defaultState, ...args }) => {\n  return (\n    <div className=\"popup\">\n      <PopupResource defaultState={defaultState}>\n        <Child {...args} > { children } </Child>\n      </PopupResource>\n    </div>\n  )\n}\n\nfunction Button({ children, buttonTitle, onClick, width='auto', ...args }) {\n  const { popupAppear, popupDisappear, groupRef, state } = useContext(PopupContext) \n  return (\n    <React.Fragment>\n      <button \n        className=\"btn\" \n        onClick={ state === 'appear' ? popupDisappear : popupAppear} \n        { ...args }\n      >\n        { buttonTitle }\n      </button>\n      <div ref={groupRef} className=\"popup-group\" style={{width}}>\n        <div onClick={popupDisappear} className=\"popup-outer\"></div>\n        <div className=\"popup-group-content\">{ children }</div>\n      </div>\n    </React.Fragment>\n  )\n}\n\n\nexport let ButtonPopup = forwardRef(\n  (props, ref) => React.createElement(\n    PopupWrapper(\n      forwardRef((props, ref) => <Button {...props} ref={ref} />)),\n      { ...props, ref }\n  )\n)","\nimport { ButtonPopup } from '../Popup/Popup.js'\nimport './Header.css'\n\nexport default function Header({ changeFilter, markDoneAll, deleteAll, filterMode }) {\n  return (\n    <div className=\"header\">\n      <h1>Todo</h1>\n\n      <ButtonPopup width={250} buttonTitle=\"Options\">\n        <div className=\"function-filter\">\n          <select \n            defaultValue={ filterMode.sortType } \n            name=\"filter\" \n            onChange={(event) => changeFilter(prev => \n              ({ ...prev, sortType: event.target.value })\n            )}\n          >\n            <option value=\"\" disabled={false} >Default</option>\n            <option value=\"name\">Sort by name</option>\n            <option value=\"time\">Sort by time</option>\n          </select>\n        </div>\n\n        <hr />\n\n        <label className=\"checkbox\">\n          <input \n            checked={ filterMode.filterType === 'incompleted-only' ? true : false} \n            type=\"checkbox\" \n            onChange={(event) => \n              changeFilter(prev => ({ \n                ...prev, \n                filterType: ((event.target.checked && 'incompleted-only') || 'all')\n              })\n            )} \n          />\n          Incomplete tasks only\n        </label>\n\n        <hr />\n\n        <button onClick={() => { markDoneAll() }} className=\"btn\" >\n          Mark done all\n        </button>\n        <button onClick={() => { deleteAll() }} className=\"btn warning\" >\n          Delete all\n        </button>\n      </ButtonPopup>\n    </div>\n  )\n}\n","\nimport './InputArea.css'\n\nimport { useRef, useState, useEffect } from 'react'\nimport React from 'react'\n\nimport { ButtonPopup } from '../Popup/Popup.js'\n\n\nexport function EditFormBase({ defaultVal, onChange=() => {}, outerRef, onSubmit, ...args }) {\n  const [ formData, setFormData ] = useState({ ...defaultVal })\n  useEffect(() => {\n    if (outerRef) {\n      outerRef.current.value = formData.title\n      outerRef.current.textContent = formData.title\n    }\n  }, [formData.title])\n\n  const handleChange = ( event, newState ) => {\n    setFormData(prev => {\n      const newFormData = { ...prev, ...newState }\n      onChange(newFormData)\n      return newFormData\n    })\n  }\n\n  const handleSubmit = (event, ...args) => {\n    event.preventDefault()\n    onSubmit(formData)\n  }\n\n  return (\n    <form onSubmit={handleSubmit} onClick={e => e.stopPropagation()} className=\"edit-form\">\n      <label className=\"edit-input\">\n        <div className=\"title\">Title</div>\n        <input \n          type=\"text\" \n          value={formData.title}\n          onChange={event => {\n            if (formData.title === '') \n              handleChange(event, { title: event.target.value.toUpperCase() })\n            else\n            handleChange(event, { title: event.target.value })\n          }}\n        />\n      </label>\n      <label className=\"edit-input\">\n        <div className=\"title\">Description</div>\n        <textarea \n          rows={5} \n          cols={20}\n          value={formData.description}\n          onChange={event => handleChange(event, { description: event.target.value })}\n        ></textarea>\n      </label>\n      <label className=\"edit-input\">\n        <div className=\"title\">Date</div>\n        <input \n          type=\"time\" \n          value={formData.date}\n          onChange={event => handleChange(event, { date: event.target.value })}\n        />\n      </label>\n      <button type=\"submit\" className=\"btn\">Submit</button>\n    </form>\n  )\n}\n\n\nexport default function InputArea({ addTask }) {\n  const inputRef = useRef()\n  const [ title, setTitle ] = useState('')\n  const formData = useRef({\n    title: '',\n    description: '',\n    data: '',\n  })\n\n  function handleSubmit(  ) {\n    if (formData.current.title !== '') {\n      let task = formData.current\n      addTask(task)\n      setTitle('')\n      formData.current = {}\n      inputRef.current.focus()\n    }\n  }\n\n  function handleChange( task ) {\n    formData.current = { ...formData.current, ...task }\n  }\n\n  return (\n    <div className=\"input-area\">\n      <input \n        ref={inputRef} \n        value={title}\n        className=\"task-input\" \n        onChange={(event) => {\n          if (title === '') {\n            setTitle(() => event.target.value.toUpperCase())\n            handleChange({ title: event.target.value.toUpperCase()})\n          }\n          else {\n            setTitle(() => event.target.value)\n            handleChange({ title: event.target.value })\n          }\n        }}\n        type=\"text\" \n        placeholder=\"Enter your task here...\" \n      />\n      <ButtonPopup \n        defaultState=\"disappear\" \n        width={300} \n        buttonTitle={<i className=\"fas fa-pencil-alt\"></i>} \n      >\n        <EditFormBase \n          onChange={handleChange} \n          onSubmit={handleSubmit} \n          defaultVal={{ title: title || '' }} \n          outerRef={inputRef}\n        ></EditFormBase>\n      </ButtonPopup>\n      <button onClick={handleSubmit} className=\"btn\">\n        <i className=\"fas fa-arrow-right\"></i>\n      </button>\n    </div>\n  )\n}\n","\nimport { ButtonPopup } from '../Popup/Popup'\nimport { EditFormBase } from '../InputArea/InputArea'\n\nimport './TaskArea.css'\n\nimport React, { useContext, useState, useRef } from 'react'\n\n\nfunction TaskItem({ task, taskList, editTask, deleteTask, markDone, ...args }) {\n  const titleRef = useRef()\n  const changeStarState = ( event, task) => {\n    event.stopPropagation()\n    editTask( task.id, { isStar: !task.isStar })\n  }\n  return (\n    <li \n      key={task.id}\n      onClick={() => markDone(task.id)}\n      className={`task-list-item ${task.isDone ? 'disable' : 'active'}`}\n    >\n      <div className=\"left-side\">\n        <span className=\"task-title\">\n          <span ref={titleRef} className=\"task-title-content\">{ task.title }</span>\n          <span className=\"task-date\">{task.date && `-- ${task.date}`}</span>\n        </span>\n        {\n          task.description &&\n          <div style={{display: 'inline-block', marginLeft: 5}}>\n            <ButtonPopup width={350} buttonTitle={<i style={{fontSize: 18}} className=\"far fa-comment-dots\"></i>} >\n              <span style={{\"white-space\": \"pre-line\"}}>{task.description}</span>\n            </ButtonPopup>\n          </div>\n        }\n      </div>\n\n      <div className=\"more-icon\">\n        <ButtonPopup \n          width={350}\n          buttonTitle={<i className=\"fas fa-pencil-alt\"></i>}\n        >\n          <EditFormBase \n            defaultVal={task}              \n            // outerRef={titleRef}\n            onSubmit={(task) => editTask(task.id, task)}\n          />\n        </ButtonPopup>\n\n        <div className=\"group\">\n          <div className=\"btn btn-curve-left star-icon\" onClick={event => changeStarState(event, task)}>\n            {\n              task.isStar\n                ? <i className=\"fas fa-star\" ></i>\n                : <i className=\"far fa-star\" ></i>\n            }\n          </div>\n          \n          <div className=\"btn btn-curve-right trash-icon\" onClick={() => deleteTask(task.id)}><i className=\"fas fa-trash\"></i></div>\n        </div>\n      </div>\n    </li>\n  )\n}\n\nexport default function TaskArea({ taskList, ...args }) {\n  return (\n    <div className=\"task-area\">\n      <ul className=\"task-list\">\n        { taskList.map(task => ( <TaskItem key={task.id} task={task} {...args} />)) }\n      </ul>\n    </div>\n  )\n}","import './Todo.css'\nimport React from 'react'\nimport Header from './Components/Header/Header.js'\nimport InputArea from './Components/InputArea/InputArea.js'\nimport TaskArea from './Components/TaskArea/TaskArea.js'\nimport { useState, useEffect, useContext, useRef } from 'react'\n\n\nexport default function Todo() {\n  let [ taskList, setTaskListState ] = useState(() => {\n    return JSON.parse(localStorage.getItem('taskList')) || []\n  })\n  const setTaskList = (arg) => {\n    setTaskListState(prev => {\n      const newTaskList = arg instanceof Function ? arg(prev) : arg\n      localStorage.setItem('taskList', JSON.stringify(newTaskList))\n      return newTaskList\n    })\n  }\n\n  const [ filterMode, setFilterModeState ] = useState(() => {\n    return JSON.parse(localStorage.getItem('filterMode')) || {\n      sortType: '',\n      filterType: 'default'\n    }\n  })\n  const setFilterMode = arg => {\n    setFilterModeState(prev => {\n      const newFilterMode = arg instanceof Function ? arg(prev) : arg\n      localStorage.setItem('filterMode', JSON.stringify(newFilterMode))\n      return newFilterMode\n    })\n  }\n\n  const handleAddTask = task => {\n    setTaskList(prev => [ \n        ...prev,\n        {\n          id: Number.parseInt(prev[prev.length - 1]?.id || 0) + 1,\n          isDone: false,\n          title: task.title, \n          description: task.description || '',\n          date: task.date || '00:00',\n          isStar: false,\n        }\n      ])\n  }\n\n  const handleMarkdone = ( targetId, state ) => {\n    setTaskList(prev => prev.map(task => {\n        if (task.id === targetId) return ({\n          ...task,\n          isDone: state ?? !task.isDone,\n        })\n        else return task\n      }))\n  }\n\n  const handleEditTask = ( targetId, state ) => {\n    setTaskList(prev => prev.map(task => {\n      if (task.id === targetId) return ({\n        ...task,\n        ...state\n      })\n      else return task\n    }))\n  }\n\n  const handleDelete = targetId => {\n    setTaskList(prev => prev.filter(task => task.id !== targetId))\n  }\n\n  const handleFilter = ({ sortType, filterType }) => {\n    return (() => {\n      let displayList = taskList\n      switch (filterType) {\n        case 'incompleted-only': \n          displayList = displayList.filter(task => !task.isDone)\n          break\n      }\n      switch (sortType) {\n        case 'name': \n          displayList.sort((a, b) => b.title[0] > a.title[0] ? -1 : 1)\n          break\n        case 'time':\n          displayList.sort((a, b) => a.date > b.date ? 1 : -1)\n      }\n      displayList = displayList.reduce((acc, task) => {\n        if (task.isStar) acc.unshift(task)\n        else acc.push(task)\n        return acc\n      }, [])\n      return displayList\n    })()\n  }\n\n  return (\n    <div className=\"todo\">\n      <Header \n        filterMode={filterMode}\n        changeFilter={setFilterMode} \n        markDoneAll={() => taskList.map(task => handleMarkdone(task.id, true))} \n        deleteAll={() => setTaskList([])} \n      />\n      <InputArea addTask={handleAddTask}/>\n      <TaskArea \n        editTask={handleEditTask} \n        deleteTask={handleDelete}\n        markDone={handleMarkdone} \n        taskList={handleFilter(filterMode)} \n      />\n\n    </div>\n  )\n}","import './App.css';\nimport Todo from './Todo/Todo.js'\nimport React from 'react'\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <Todo />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}